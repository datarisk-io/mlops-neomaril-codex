# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Datarisk
# This file is distributed under the same license as the neomaril-codex
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: neomaril-codex \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-04 12:08-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: pt\n"
"Language-Team: pt <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"

#: ../../source/model.rst:2
msgid "Model module"
msgstr "Módulo do modelo"

#: ../../source/model.rst:5
msgid ""
"Module with all classes and methods to manage the Machine Learning (ML) "
"models deployed at Neomaril."
msgstr ""
"Módulo com todas as classes e métodos para gerenciar os modelos de "
"Machine Learning (ML) implantados no Neomaril."

#: ../../source/model.rst:9
msgid "neomaril\\_codex.model.NeomarilModel"
msgstr "neomaril\\_codex.model.NeomarilModel"

#: neomaril_codex.model.NeomarilModel:1 of
msgid "Bases: :py:class:`~neomaril_codex.base.BaseNeomaril`"
msgstr "Bases: :py:class:`~neomaril_codex.base.BaseNeomaril`"

#: neomaril_codex.model.NeomarilModel:1 of
msgid "Class to manage Models deployed inside Neomaril"
msgstr "Classe usada para gerenciar os modelos implantados dentro do Neomaril"

#: neomaril_codex.model.NeomarilModel:5
#: neomaril_codex.model.NeomarilModelClient:5 of
msgid ""
"Login for authenticating with the client. You can also use the env "
"variable NEOMARIL_USER to set this"
msgstr ""
"Use o login para autenticar com o cliente. Você também pode usar a variável "
"de ambiente NEOMARIL_USER para configurar isto"

#: neomaril_codex.model.NeomarilModel neomaril_codex.model.NeomarilModelClient
#: of
msgid "type"
msgstr "type"

#: neomaril_codex.model.NeomarilModel:-1 neomaril_codex.model.NeomarilModel:7
#: neomaril_codex.model.NeomarilModel:13
#: neomaril_codex.model.NeomarilModelClient:7
#: neomaril_codex.model.NeomarilModelClient:13
#: neomaril_codex.model.NeomarilModelClient:19 of
msgid "str"
msgstr "str"

#: neomaril_codex.model.NeomarilModel:11
#: neomaril_codex.model.NeomarilModelClient:11 of
msgid ""
"Password for authenticating with the client. You can also use the env "
"variable NEOMARIL_PASSWORD to set this"
msgstr ""
"Senha para autenticar com o cliente. Você também pode usar a variável "
"de ambiente NEOMARIL_PASSWORD para configurar isto"

#: neomaril_codex.model.NeomarilModel:15 of
#, fuzzy
msgid "model_id"
msgstr "Módulo do modelo"

#: neomaril_codex.model.NeomarilModel:16 of
msgid "Model id (hash) from the model you want to access"
msgstr "ID do modelo (hash) para o modelo que você deseja acessar"

#: neomaril_codex.model.NeomarilModel:17 of
msgid "group"
msgstr "grupo"

#: neomaril_codex.model.NeomarilModel:18
#: neomaril_codex.model.NeomarilModelClient.get_model:5 of
msgid "Group the model is inserted. Default is 'datarisk' (public group)"
msgstr "Grupo que o modelo está inserido. O valor padrão é 'datarisk' (grupo público)"

#: neomaril_codex.model.NeomarilModel:19 of
msgid "group_token"
msgstr "group_token"

#: neomaril_codex.model.NeomarilModel:20
#: neomaril_codex.model.NeomarilModel.predict:7
#: neomaril_codex.model.NeomarilModelClient.get_model:7 of
msgid ""
"Token for executing the model (show when creating a group). It can be "
"informed when getting the model or when running predictions, or using the"
" env variable NEOMARIL_GROUP_TOKEN"
msgstr ""
"Token para executar o modelo (mostrado na criação do grupo). Ele pode ser "
"informado quando recebe-se o modelo ou quando são executadas as predições, ou usando a"
" variável de ambiente NEOMARIL_GROUP_TOKEN"

#: neomaril_codex.model.NeomarilModel:21 of
msgid "url"
msgstr "url"

#: neomaril_codex.model.NeomarilModel:22
#: neomaril_codex.model.NeomarilModelClient:17 of
msgid ""
"URL to Neomaril Server. Default value is "
"https://neomaril.staging.datarisk.net, use it to test your deployment "
"first before changing to production. You can also use the env variable "
"NEOMARIL_URL to set this"
msgstr ""
"URL para o servidor do Neomaril. O valor padrão é "
"https://neomaril.staging.datarisk.net, use ele para testar seu deployment "
"antes de mover para produção. Você também pode usar a variável de ambiente "
"NEOMARIL_URL para configurar isto"

#: neomaril_codex.model.NeomarilModel:24 of
msgid "docs"
msgstr "docs"

#: neomaril_codex.model.NeomarilModel:24 of
msgid "URL for the model Swagger page"
msgstr "URL para a página Swagger do modelo"

#: neomaril_codex.model.NeomarilModel neomaril_codex.model.NeomarilModel.delete
#: neomaril_codex.model.NeomarilModel.generate_predict_code
#: neomaril_codex.model.NeomarilModel.get_logs
#: neomaril_codex.model.NeomarilModel.get_model_execution
#: neomaril_codex.model.NeomarilModel.predict
#: neomaril_codex.model.NeomarilModel.register_monitoring
#: neomaril_codex.model.NeomarilModelClient
#: neomaril_codex.model.NeomarilModelClient.create_model
#: neomaril_codex.model.NeomarilModelClient.get_logs
#: neomaril_codex.model.NeomarilModelClient.get_model
#: neomaril_codex.model.NeomarilModelClient.search_models of
msgid "Raises"
msgstr "Raises"

#: neomaril_codex.model.NeomarilModel:26 of
msgid "When the model can't be acessed in the server"
msgstr "Quando o modelo não pode ser acessado no servidor"

#: neomaril_codex.model.NeomarilModel:27
#: neomaril_codex.model.NeomarilModelClient:21 of
msgid "Unvalid credentials"
msgstr "Credenciais inválidas"

#: neomaril_codex.model.NeomarilModel:30
#: neomaril_codex.model.NeomarilModel.delete:10
#: neomaril_codex.model.NeomarilModel.get_logs:18
#: neomaril_codex.model.NeomarilModel.get_model_execution:9
#: neomaril_codex.model.NeomarilModel.health:8
#: neomaril_codex.model.NeomarilModel.register_monitoring:20
#: neomaril_codex.model.NeomarilModel.restart_model:7
#: neomaril_codex.model.NeomarilModel.set_token:7
#: neomaril_codex.model.NeomarilModel.wait_ready:4
#: neomaril_codex.model.NeomarilModelClient:25
#: neomaril_codex.model.NeomarilModelClient.create_model:36
#: neomaril_codex.model.NeomarilModelClient.get_logs:20
#: neomaril_codex.model.NeomarilModelClient.get_model:19
#: neomaril_codex.model.NeomarilModelClient.get_model_execution:14
#: neomaril_codex.model.NeomarilModelClient.search_models:18 of
msgid "Example"
msgstr "Exemplo"

#: neomaril_codex.model.NeomarilModel:31 of
msgid "Getting a model, testint its healthy and putting it to run the prediction"
msgstr "Getting a model, testint its healthy and putting it to run the prediction"

#: neomaril_codex.model.NeomarilModel.delete:1 of
msgid ""
"Deletes the current model. IMPORTANT! For now this is irreversible, if "
"you want to use the model again later you will need to upload again (and "
"it will have a new ID)."
msgstr ""
"Deleta o modelo atual. IMPORTANTE! Por agora essa ação é irreversível, se "
"você quer continuar a usar o modelo no futuro, será necessário carregar novamente seus arquivos (e "
"ele receberá um novo ID)."

#: neomaril_codex.model.NeomarilModel.delete:4 of
msgid "Model deleting failed"
msgstr "Model deleting failed"

#: neomaril_codex.model.NeomarilModel.delete
#: neomaril_codex.model.NeomarilModel.generate_predict_code
#: neomaril_codex.model.NeomarilModel.get_logs
#: neomaril_codex.model.NeomarilModel.health
#: neomaril_codex.model.NeomarilModel.predict
#: neomaril_codex.model.NeomarilModel.register_monitoring
#: neomaril_codex.model.NeomarilModelClient.create_model
#: neomaril_codex.model.NeomarilModelClient.get_logs
#: neomaril_codex.model.NeomarilModelClient.get_model
#: neomaril_codex.model.NeomarilModelClient.get_model_execution
#: neomaril_codex.model.NeomarilModelClient.search_models of
msgid "Returns"
msgstr "Returns"

#: neomaril_codex.model.NeomarilModel.delete:6 of
msgid ""
"If model is at status=Deployed deletes the model and return a json with "
"his information. If it isn't Deployed it returns the message that the "
"model is under another state"
msgstr ""
"Se o modelo estiver no status=Deployed, será deletado o modelo e o retorno será um json com "
"suas informações. Se ele não estiver no status Deployed, será retornada uma mensagem de que "
"o modelo está num outro estado"

#: neomaril_codex.model.NeomarilModel.delete
#: neomaril_codex.model.NeomarilModel.generate_predict_code
#: neomaril_codex.model.NeomarilModel.get_logs
#: neomaril_codex.model.NeomarilModel.health
#: neomaril_codex.model.NeomarilModel.predict
#: neomaril_codex.model.NeomarilModel.register_monitoring
#: neomaril_codex.model.NeomarilModelClient.create_model
#: neomaril_codex.model.NeomarilModelClient.get_logs
#: neomaril_codex.model.NeomarilModelClient.get_model
#: neomaril_codex.model.NeomarilModelClient.get_model_execution
#: neomaril_codex.model.NeomarilModelClient.search_models of
msgid "Return type"
msgstr "Return type"

#: neomaril_codex.model.NeomarilModel.generate_predict_code:1 of
msgid "Generates predict code for the model to be used outside Neomaril Codex"
msgstr "Gera o código de predição para o modelo usado fora do Neomaril Codex"

#: neomaril_codex.model.NeomarilModel.generate_predict_code
#: neomaril_codex.model.NeomarilModel.get_logs
#: neomaril_codex.model.NeomarilModel.get_model_execution
#: neomaril_codex.model.NeomarilModel.predict
#: neomaril_codex.model.NeomarilModel.register_monitoring
#: neomaril_codex.model.NeomarilModel.restart_model
#: neomaril_codex.model.NeomarilModel.set_token
#: neomaril_codex.model.NeomarilModelClient.create_model
#: neomaril_codex.model.NeomarilModelClient.get_logs
#: neomaril_codex.model.NeomarilModelClient.get_model
#: neomaril_codex.model.NeomarilModelClient.get_model_execution
#: neomaril_codex.model.NeomarilModelClient.search_models of
msgid "Parameters"
msgstr "Parameters"

#: neomaril_codex.model.NeomarilModel.generate_predict_code:3 of
msgid ""
"The generated code language. Supported languages are 'curl', 'python' or "
"'javascript'"
msgstr ""
"The generated code language. Supported languages are 'curl', 'python' or "
"'javascript'"

#: neomaril_codex.model.NeomarilModel.generate_predict_code:6 of
msgid "Unsupported language"
msgstr "Linguagem não suportada"

#: neomaril_codex.model.NeomarilModel.generate_predict_code:8 of
msgid "The generated code."
msgstr "O código gerado."

#: neomaril_codex.model.NeomarilModel.get_logs:1
#: neomaril_codex.model.NeomarilModelClient.get_logs:1 of
msgid "Get the logs"
msgstr "Receba os logs"

#: neomaril_codex.model.NeomarilModel.get_logs:3
#: neomaril_codex.model.NeomarilModelClient.get_logs:5 of
msgid "Date to start filter. At the format aaaa-mm-dd"
msgstr "Data para iniciar o filtro. No formato aaaa-mm-dd"

#: neomaril_codex.model.NeomarilModel.get_logs:5
#: neomaril_codex.model.NeomarilModelClient.get_logs:7 of
msgid "Date to end filter. At the format aaaa-mm-dd"
msgstr "Data para finalizar o filtro. No formato aaaa-mm-dd"

#: neomaril_codex.model.NeomarilModel.get_logs:7 of
msgid "Type of routine beeing executed, can assume values Host or Run"
msgstr "Tipo da rotina sendo executada, pode ter os valores Host ou Run"

#: neomaril_codex.model.NeomarilModel.get_logs:9 of
msgid ""
"Defines the type of the logs that are going to be filtered, can assume "
"the values Ok, Error, Debug or Warning"
msgstr ""
"Define o tipo dos logs que serão filtrados, pode assumir "
"os valores Ok, Error, Debug ou Warning"

#: neomaril_codex.model.NeomarilModel.get_logs:12
#: neomaril_codex.model.NeomarilModelClient.get_logs:14
#: neomaril_codex.model.NeomarilModelClient.search_models:12 of
msgid "Unexpected server error"
msgstr "Unexpected server error"

#: neomaril_codex.model.NeomarilModel.get_logs:14
#: neomaril_codex.model.NeomarilModelClient.get_logs:16 of
msgid "Logs list"
msgstr "List de logs"

#: neomaril_codex.model.NeomarilModel.get_model_execution:1 of
msgid "Get a execution instace for that model."
msgstr "Recebe a instância da execução do modelo."

#: neomaril_codex.model.NeomarilModel.get_model_execution:3
#: neomaril_codex.model.NeomarilModelClient.get_model_execution:5 of
msgid "Execution id"
msgstr "Execution id"

#: neomaril_codex.model.NeomarilModel.get_model_execution:6 of
msgid "If the user tries to get a execution from a Sync model"
msgstr "Se o usuário tentar receber uma execução de um modelo Sync"

#: neomaril_codex.model.NeomarilModel.health:1 of
msgid "Get the model deployment process health state."
msgstr "Recebe o estado de saúde do processo de implantação do modelo"

#: neomaril_codex.model.NeomarilModel.health:3 of
msgid ""
"OK - if the it is possible to get the health state NOK - if an exception "
"occurs"
msgstr ""
"OK - if the it is possible to get the health state NOK - if an exception "
"occurs"

#: neomaril_codex.model.NeomarilModel.predict:1 of
msgid "Runs a prediction from the current model."
msgstr "Executa uma predição com o modelo atual"

#: neomaril_codex.model.NeomarilModel.predict:3 of
msgid ""
"The same data that is used in the source file. If Sync is a dict, the "
"keys that are needed inside this dict are the ones in the `schema` "
"atribute. If Async is a string with the file path with the same filename "
"used in the source file."
msgstr ""
"Os mesmos dados que são usados no arquivo fonte. Se Sync é um dict, as "
"chaves que são necessárias dentro deste dict são aquelas no atributo "
"`schema`. Se Async é uma string com o caminho do arquivo com o mesmo nome "
"usado no arquivo fonte."

#: neomaril_codex.model.NeomarilModel.predict:9 of
msgid ""
"Boolean that informs if a model training is completed (True) or not "
"(False). Default value is False"
msgstr ""
"Booleano que informa se um treinamento do modelo está completo (True) ou não "
"(False). O valor padrão é False"

#: neomaril_codex.model.NeomarilModel.predict:12 of
msgid "Model is not available"
msgstr "Modelo não está disponível"

#: neomaril_codex.model.NeomarilModel.predict:14 of
msgid ""
"The return of the scoring function in the source file for Sync models or "
"the execution class for Async models."
msgstr ""
"O retorno da função de escoragem no arquivo fonte para modelos Sync ou "
"a classe de execução para modelos Async."

#: neomaril_codex.model.NeomarilModel.register_monitoring:1 of
msgid "Register the model monitoring configuration at the database"
msgstr "Registra a configuração de monitoramento do modelo no banco de dados"

#: neomaril_codex.model.NeomarilModel.register_monitoring:3 of
msgid "Name of the preprocess reference"
msgstr "Nome da referência de preprocessamento"

#: neomaril_codex.model.NeomarilModel.register_monitoring:5 of
msgid "Name of the preprocess function"
msgstr "Nome da função de preprocessamento"

#: neomaril_codex.model.NeomarilModel.register_monitoring:7 of
msgid "Path of the configuration file, but it could be a dict"
msgstr "Caminho do arquivo de configuração, mas pode ser um dict"

#: neomaril_codex.model.NeomarilModel.register_monitoring:9 of
msgid "Path of the preprocess script"
msgstr "Caminho para o script de preprocessamento"

#: neomaril_codex.model.NeomarilModel.register_monitoring:11 of
msgid "Path of the requirements file"
msgstr "Caminho para o arquivo requirements"

#: neomaril_codex.model.NeomarilModel.register_monitoring:14 of
msgid "Invalid parameters for model creation"
msgstr "Parâmetros inválidos para a criação do modelo"

#: neomaril_codex.model.NeomarilModel.register_monitoring:16
#: neomaril_codex.model.NeomarilModelClient.get_logs:3
#: neomaril_codex.model.NeomarilModelClient.get_model_execution:3 of
msgid "Model id (hash)"
msgstr "Model id (hash)"

#: neomaril_codex.model.NeomarilModel.restart_model:1 of
msgid "Restart a model deployment process health state."
msgstr "Reinicia o estado de saúde do processo de implantação de um modelo."

#: neomaril_codex.model.NeomarilModel.restart_model:3
#: neomaril_codex.model.NeomarilModelClient.get_model:9 of
msgid ""
"If the model is being deployed, wait for it to be ready instead of "
"failing the request. Defaults to True"
msgstr ""
"Se o modelo está sendo implantado, espera para que ele esteja pronto em vez de "
"falhar a requisição. O valor padrão é True"

#: neomaril_codex.model.NeomarilModel.set_token:1 of
msgid "Saves the group token for this model instance."
msgstr "Salva o token do grupo para essa instância do modelo."

#: neomaril_codex.model.NeomarilModel.set_token:3 of
msgid ""
"Token for executing the model (show when creating a group). You can set "
"this using the NEOMARIL_GROUP_TOKEN env variable"
msgstr ""

#: neomaril_codex.model.NeomarilModel.wait_ready:1 of
msgid "Waits the model to be with status 'Deployed'"
msgstr "Espera o modelo ter o status 'Deployed'"

#: ../../source/model.rst:18
msgid "neomaril\\_codex.model.NeomarilModelClient"
msgstr "neomaril\\_codex.model.NeomarilModelClient"

#: neomaril_codex.model.NeomarilModelClient:1 of
#, fuzzy
msgid "Bases: :py:class:`~neomaril_codex.base.BaseNeomarilClient`"
msgstr "Bases: :py:class:`~neomaril_codex.base.BaseNeomarilClient`"

#: neomaril_codex.model.NeomarilModelClient:1 of
msgid "Class for client to access Neomaril and manage models"
msgstr "Classe para que o cliente acesse o Neomaril e gerencie modelos"

#: neomaril_codex.model.NeomarilModelClient:22 of
msgid "Server unavailable"
msgstr "Server unavailable"

#: neomaril_codex.model.NeomarilModelClient:26 of
msgid "Example 1: Creation and managing a Synchronous Model"
msgstr "Exemplo 1: Criação e gerenciamento de um modelo Síncrono"

#: neomaril_codex.model.NeomarilModelClient:72 of
msgid "Example 2: creation and deployment of a Asynchronous Model"
msgstr "Exemplo 2: Criação e gerenciamento de um modelo Assíncrono"

#: neomaril_codex.model.NeomarilModelClient.create_model:1 of
msgid "Deploy a new model to Neomaril."
msgstr "Implantação de um novo modelo no Neomaril."

#: neomaril_codex.model.NeomarilModelClient.create_model:3 of
msgid "The name of the model, in less than 32 characters"
msgstr "O nome do modelo, em menos que 32 caracteres"

#: neomaril_codex.model.NeomarilModelClient.create_model:5 of
msgid "The name of the scoring function inside the source file"
msgstr "O nome da função de escoragem dentro do arquivo fonte"

#: neomaril_codex.model.NeomarilModelClient.create_model:7 of
msgid ""
"Path of the source file. The file must have a scoring function that "
"accepts two parameters: data (data for the request body of the model) and"
" model_path (absolute path of where the file is located)"
msgstr ""
"Caminho do arquivo fonte. O arquivo deve ter uma função de escoragem que "
"aceita dois parâmetros: data (dados para o corpo da requisição do modelo) e"
" model_path (caminho absoluto de onde o arquivo está localizado)"

#: neomaril_codex.model.NeomarilModelClient.create_model:9 of
msgid "Path of the model pkl file"
msgstr "Caminho do arquivo pkl do modelo"

#: neomaril_codex.model.NeomarilModelClient.create_model:11 of
msgid ""
"Path of the requirements file. The packages versions must be fixed eg: "
"pandas==1.0"
msgstr ""
"Caminho para o arquivo de requirements. As versões dos pacotes devem ser fixadas ex: "
"pandas==1.0"

#: neomaril_codex.model.NeomarilModelClient.create_model:13 of
msgid ""
"Path to a JSON or XML file with a sample of the input for the entrypoint "
"function. A dict with the sample input can be send as well. Mandatory for"
" Sync models"
msgstr ""
"Caminho para um arquivo JSON ou XML com um exemplo de entrada para a função "
"entrypoint. Um dict com um exemplo de entrada pode ser enviado também. Mandatório para"
" modelos Sync"

#: neomaril_codex.model.NeomarilModelClient.create_model:15 of
msgid "Group the model is inserted. Default to 'datarisk' (public group)"
msgstr "Grupo que o modelo é inserido. O valor padrão é 'datarisk' (grupo público)"

#: neomaril_codex.model.NeomarilModelClient.create_model:17 of
msgid ""
"A optional list with additional files paths that should be uploaded. If "
"the scoring function refer to this file they will be on the same folder "
"as the source file"
msgstr ""
"A optional list with additional files paths that should be uploaded. If "
"the scoring function refer to this file they will be on the same folder "
"as the source file"

#: neomaril_codex.model.NeomarilModelClient.create_model:19 of
msgid ""
".env file to be used in your model enviroment. This will be encrypted in "
"the server."
msgstr ""
".env file to be used in your model enviroment. This will be encrypted in "
"the server."

#: neomaril_codex.model.NeomarilModelClient.create_model:21 of
msgid ""
"Python version for the model environment. Avaliable versions are 3.7, "
"3.8, 3.9, 3.10. Defaults to '3.8'"
msgstr ""
"Python version for the model environment. Avaliable versions are 3.7, "
"3.8, 3.9, 3.10. Defaults to '3.8'"

#: neomaril_codex.model.NeomarilModelClient.create_model:23 of
msgid ""
"Defines wich kind operation is beeing executed (Sync or Async). Default "
"value is Sync"
msgstr ""
"Defines wich kind operation is beeing executed (Sync or Async). Default "
"value is Sync"

#: neomaril_codex.model.NeomarilModelClient.create_model:25 of
msgid "The type of the input file that should be 'json', 'csv' or 'parquet'"
msgstr "The type of the input file that should be 'json', 'csv' or 'parquet'"

#: neomaril_codex.model.NeomarilModelClient.create_model:27 of
msgid ""
"Wait for model to be ready and returns a NeomarilModel instace with the "
"new model. Defaults to True"
msgstr ""
"Wait for model to be ready and returns a NeomarilModel instace with the "
"new model. Defaults to True"

#: neomaril_codex.model.NeomarilModelClient.create_model:30 of
msgid "Some input parameters its invalid"
msgstr "Some input parameters its invalid"

#: neomaril_codex.model.NeomarilModelClient.create_model:32 of
msgid ""
"Returns the new model, if wait_for_ready=True runs the deploy process "
"synchronously. If its False, returns nothing after sending all the data "
"to server and runs the deploy asynchronously"
msgstr ""
"Returns the new model, if wait_for_ready=True runs the deploy process "
"synchronously. If its False, returns nothing after sending all the data "
"to server and runs the deploy asynchronously"

#: neomaril_codex.model.NeomarilModelClient.get_logs:9 of
msgid ""
"Type of routine being executed, can assume values 'Host' (for deployment "
"logs) or 'Run' (for execution logs)"
msgstr ""
"Type of routine being executed, can assume values 'Host' (for deployment "
"logs) or 'Run' (for execution logs)"

#: neomaril_codex.model.NeomarilModelClient.get_logs:11 of
msgid ""
"Defines the type of the logs that are going to be filtered, can assume "
"the values 'Ok', 'Error', 'Debug' or 'Warning'"
msgstr ""
"Defines the type of the logs that are going to be filtered, can assume "
"the values 'Ok', 'Error', 'Debug' or 'Warning'"

#: neomaril_codex.model.NeomarilModelClient.get_model:1 of
msgid "Acess a model using its id"
msgstr "Acess a model using its id"

#: neomaril_codex.model.NeomarilModelClient.get_model:3 of
msgid "Model id (hash) that needs to be acessed"
msgstr "Model id (hash) that needs to be acessed"

#: neomaril_codex.model.NeomarilModelClient.get_model:12 of
#, fuzzy
msgid "Model unavailable"
msgstr "Módulo do modelo"

#: neomaril_codex.model.NeomarilModelClient.get_model:13 of
msgid "Unknown return from server"
msgstr "Unknown return from server"

#: neomaril_codex.model.NeomarilModelClient.get_model:15 of
msgid "A NeomarilModel instance with the model hash from `model_id`"
msgstr "A NeomarilModel instance with the model hash from `model_id`"

#: neomaril_codex.model.NeomarilModelClient.get_model_execution:1 of
msgid "Get a execution instace (Async model only)."
msgstr "Get a execution instace (Async model only)."

#: neomaril_codex.model.NeomarilModelClient.get_model_execution:7 of
msgid "Group name, default value is None"
msgstr "Group name, default value is None"

#: neomaril_codex.model.NeomarilModelClient.get_model_execution:10 of
msgid "The new execution"
msgstr "The new execution"

#: neomaril_codex.model.NeomarilModelClient.search_models:1 of
msgid "Search for models using the name of the model"
msgstr "Search for models using the name of the model"

#: neomaril_codex.model.NeomarilModelClient.search_models:3 of
msgid ""
"Text that its expected to be on the model name. It runs similar to a LIKE"
" query on SQL"
msgstr ""
"Text that its expected to be on the model name. It runs similar to a LIKE"
" query on SQL"

#: neomaril_codex.model.NeomarilModelClient.search_models:5 of
msgid ""
"Text that its expected to be on the state. It runs similar to a LIKE "
"query on SQL"
msgstr ""
"Text that its expected to be on the state. It runs similar to a LIKE "
"query on SQL"

#: neomaril_codex.model.NeomarilModelClient.search_models:7 of
msgid ""
"Text that its expected to be on the group name. It runs similar to a LIKE"
" query on SQL"
msgstr ""
"Text that its expected to be on the group name. It runs similar to a LIKE"
" query on SQL"

#: neomaril_codex.model.NeomarilModelClient.search_models:9 of
msgid ""
"If its True, filter only models ready to be used (status == "
"\"Deployed\"). Defaults to False"
msgstr ""
"If its True, filter only models ready to be used (status == "
"\"Deployed\"). Defaults to False"

#: neomaril_codex.model.NeomarilModelClient.search_models:14 of
msgid ""
"List with the models data, it can works like a filter depending on the "
"arguments values"
msgstr ""
"List with the models data, it can works like a filter depending on the "
"arguments values"

