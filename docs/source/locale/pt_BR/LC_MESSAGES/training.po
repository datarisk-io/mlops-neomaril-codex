# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Datarisk
# This file is distributed under the same license as the neomaril-codex
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: neomaril-codex \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-04 12:08-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: pt\n"
"Language-Team: pt <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"

#: ../../source/training.rst:2
msgid "Training module"
msgstr "Módulo de treinamento"

#: ../../source/training.rst:5
msgid "Module with the classes that alows to manage your trainining experiments."
msgstr ""
"Módulo com as classes que permitem gerenciar seus experimentos de "
"treinamento."

#: ../../source/training.rst:9
msgid "neomaril\\_codex.training.NeomarilTrainingExecution"
msgstr "neomaril\\_codex.training.NeomarilTrainingExecution"

#: neomaril_codex.training.NeomarilTrainingExecution:1 of
#, fuzzy
msgid "Bases: :py:class:`~neomaril_codex.base.NeomarilExecution`"
msgstr "Bases: :py:class:`~neomaril_codex.base.NeomarilExecution`"

#: neomaril_codex.training.NeomarilTrainingExecution:1 of
msgid "Class to manage trained models."
msgstr "Class to manage trained models."

#: neomaril_codex.training.NeomarilTrainingExecution:5
#: neomaril_codex.training.NeomarilTrainingExperiment:16 of
msgid "Training id (hash) from the experiment you want to access"
msgstr "Training id (hash) from the experiment you want to access"

#: neomaril_codex.training.NeomarilTrainingClient
#: neomaril_codex.training.NeomarilTrainingExecution
#: neomaril_codex.training.NeomarilTrainingExperiment of
msgid "type"
msgstr "type"

#: neomaril_codex.training.NeomarilTrainingClient:7
#: neomaril_codex.training.NeomarilTrainingClient:13
#: neomaril_codex.training.NeomarilTrainingClient:19
#: neomaril_codex.training.NeomarilTrainingExecution:-1
#: neomaril_codex.training.NeomarilTrainingExecution:7
#: neomaril_codex.training.NeomarilTrainingExecution:13
#: neomaril_codex.training.NeomarilTrainingExecution:23
#: neomaril_codex.training.NeomarilTrainingExecution:29
#: neomaril_codex.training.NeomarilTrainingExperiment:-1
#: neomaril_codex.training.NeomarilTrainingExperiment:7
#: neomaril_codex.training.NeomarilTrainingExperiment:13 of
msgid "str"
msgstr "str"

#: neomaril_codex.training.NeomarilTrainingExecution:11
#: neomaril_codex.training.NeomarilTrainingExperiment:18 of
msgid "Group the training is inserted. Default is 'datarisk' (public group)"
msgstr "Group the training is inserted. Default is 'datarisk' (public group)"

#: neomaril_codex.training.NeomarilTrainingExecution:17 of
msgid "Executiong id for that especific training run login : str"
msgstr "Executiong id for that especific training run login : str"

#: neomaril_codex.training.NeomarilTrainingClient:5
#: neomaril_codex.training.NeomarilTrainingExecution:19
#: neomaril_codex.training.NeomarilTrainingExperiment:5 of
msgid ""
"Login for authenticating with the client. You can also use the env "
"variable NEOMARIL_USER to set this"
msgstr ""
"Login for authenticating with the client. You can also use the env "
"variable NEOMARIL_USER to set this"

#: neomaril_codex.training.NeomarilTrainingExecution:21 of
msgid "password"
msgstr "password"

#: neomaril_codex.training.NeomarilTrainingClient:11
#: neomaril_codex.training.NeomarilTrainingExecution:21
#: neomaril_codex.training.NeomarilTrainingExperiment:11 of
msgid ""
"Password for authenticating with the client. You can also use the env "
"variable NEOMARIL_PASSWORD to set this"
msgstr ""
"Password for authenticating with the client. You can also use the env "
"variable NEOMARIL_PASSWORD to set this"

#: neomaril_codex.training.NeomarilTrainingExecution:27 of
msgid "Enviroment of Neomaril you are using."
msgstr "Enviroment of Neomaril you are using."

#: neomaril_codex.training.NeomarilTrainingExecution:33 of
msgid "Metadata from the execution."
msgstr "Metadata from the execution."

#: neomaril_codex.training.NeomarilTrainingExecution:35 of
msgid "dict"
msgstr "dict"

#: neomaril_codex.training.NeomarilTrainingClient
#: neomaril_codex.training.NeomarilTrainingClient.create_training_experiment
#: neomaril_codex.training.NeomarilTrainingClient.get_training
#: neomaril_codex.training.NeomarilTrainingExecution
#: neomaril_codex.training.NeomarilTrainingExecution.get_status
#: neomaril_codex.training.NeomarilTrainingExecution.promote_model
#: neomaril_codex.training.NeomarilTrainingExperiment
#: neomaril_codex.training.NeomarilTrainingExperiment.run_training of
msgid "Raises"
msgstr "Raises"

#: neomaril_codex.training.NeomarilTrainingExecution:37
#: neomaril_codex.training.NeomarilTrainingExperiment:25 of
msgid "When the training can't be acessed in the server"
msgstr "When the training can't be acessed in the server"

#: neomaril_codex.training.NeomarilTrainingClient:21
#: neomaril_codex.training.NeomarilTrainingExecution:38
#: neomaril_codex.training.NeomarilTrainingExperiment:26 of
msgid "Unvalid credentials"
msgstr "Unvalid credentials"

#: neomaril_codex.training.NeomarilTrainingClient:25
#: neomaril_codex.training.NeomarilTrainingClient.create_training_experiment:17
#: neomaril_codex.training.NeomarilTrainingClient.get_training:15
#: neomaril_codex.training.NeomarilTrainingExecution:41
#: neomaril_codex.training.NeomarilTrainingExecution.promote_model:28
#: neomaril_codex.training.NeomarilTrainingExperiment:29
#: neomaril_codex.training.NeomarilTrainingExperiment.run_training:34 of
msgid "Example"
msgstr "Example"

#: neomaril_codex.training.NeomarilTrainingExecution.get_status:1 of
msgid "Gets the status of the related execution."
msgstr "Gets the status of the related execution."

#: neomaril_codex.training.NeomarilTrainingExecution.get_status:3 of
msgid "Execution unavailable"
msgstr "Execution unavailable"

#: neomaril_codex.training.NeomarilTrainingClient.create_training_experiment
#: neomaril_codex.training.NeomarilTrainingClient.get_training
#: neomaril_codex.training.NeomarilTrainingExecution.get_status
#: neomaril_codex.training.NeomarilTrainingExecution.promote_model
#: neomaril_codex.training.NeomarilTrainingExperiment.get_all_training_executions
#: neomaril_codex.training.NeomarilTrainingExperiment.get_training_execution
#: neomaril_codex.training.NeomarilTrainingExperiment.run_training of
msgid "Returns"
msgstr "Returns"

#: neomaril_codex.training.NeomarilTrainingExecution.get_status:5 of
msgid "Returns the execution status."
msgstr "Returns the execution status."

#: neomaril_codex.training.NeomarilTrainingClient.create_training_experiment
#: neomaril_codex.training.NeomarilTrainingClient.get_training
#: neomaril_codex.training.NeomarilTrainingExecution.get_status
#: neomaril_codex.training.NeomarilTrainingExecution.promote_model
#: neomaril_codex.training.NeomarilTrainingExperiment.get_all_training_executions
#: neomaril_codex.training.NeomarilTrainingExperiment.get_training_execution
#: neomaril_codex.training.NeomarilTrainingExperiment.run_training of
msgid "Return type"
msgstr "Return type"

#: neomaril_codex.training.NeomarilTrainingExecution.promote_model:1 of
msgid "Upload models trained inside Neomaril."
msgstr "Upload models trained inside Neomaril."

#: neomaril_codex.training.NeomarilTrainingClient.create_training_experiment
#: neomaril_codex.training.NeomarilTrainingClient.get_training
#: neomaril_codex.training.NeomarilTrainingExecution.promote_model
#: neomaril_codex.training.NeomarilTrainingExperiment.get_training_execution
#: neomaril_codex.training.NeomarilTrainingExperiment.run_training of
msgid "Parameters"
msgstr "Parameters"

#: neomaril_codex.training.NeomarilTrainingExecution.promote_model:3
#: neomaril_codex.training.NeomarilTrainingExperiment.run_training:3 of
msgid "The name of the model, in less than 32 characters"
msgstr "The name of the model, in less than 32 characters"

#: neomaril_codex.training.NeomarilTrainingExecution.promote_model:5 of
msgid "The name of the scoring function inside the source file"
msgstr "The name of the scoring function inside the source file"

#: neomaril_codex.training.NeomarilTrainingExecution.promote_model:7 of
msgid ""
"Path of the source file. The file must have a scoring function that "
"accepts two parameters: data (data for the request body of the model) and"
" model_path (absolute path of where the file is located)"
msgstr ""
"Path of the source file. The file must have a scoring function that "
"accepts two parameters: data (data for the request body of the model) and"
" model_path (absolute path of where the file is located)"

#: neomaril_codex.training.NeomarilTrainingExecution.promote_model:9 of
msgid ""
"Path to a JSON or XML file with a sample of the input for the entrypoint "
"function. A dict with the sample input can be send as well"
msgstr ""
"Path to a JSON or XML file with a sample of the input for the entrypoint "
"function. A dict with the sample input can be send as well"

#: neomaril_codex.training.NeomarilTrainingExecution.promote_model:11
#: neomaril_codex.training.NeomarilTrainingExecution.promote_model:12 of
msgid ""
"A optional list with additional files paths that should be uploaded. If "
"the scoring function refer to this file they will be on the same folder "
"as the source file"
msgstr ""
"A optional list with additional files paths that should be uploaded. If "
"the scoring function refer to this file they will be on the same folder "
"as the source file"

#: neomaril_codex.training.NeomarilTrainingExecution.promote_model:13 of
msgid ""
"Path of the requirements file. This will override the requirements used "
"in trainning. The packages versions must be fixed eg: pandas==1.0"
msgstr ""
"Path of the requirements file. This will override the requirements used "
"in trainning. The packages versions must be fixed eg: pandas==1.0"

#: neomaril_codex.training.NeomarilTrainingExecution.promote_model:15 of
msgid ""
"Flag that choose which environment (dev, staging, production) of Neomaril"
" you are using. Default is True"
msgstr ""
"Flag that choose which environment (dev, staging, production) of Neomaril"
" you are using. Default is True"

#: neomaril_codex.training.NeomarilTrainingExecution.promote_model:17 of
msgid ""
"Defines wich kind operation is beeing executed (Sync or Async). Default "
"value is Sync"
msgstr ""
"Defines wich kind operation is beeing executed (Sync or Async). Default "
"value is Sync"

#: neomaril_codex.training.NeomarilTrainingExecution.promote_model:19 of
msgid "The type of the input file that should be 'json', 'csv' or 'parquet'"
msgstr "The type of the input file that should be 'json', 'csv' or 'parquet'"

#: neomaril_codex.training.NeomarilTrainingExecution.promote_model:22 of
msgid "The training execution shouldn't be succeeded to be promoted"
msgstr "The training execution shouldn't be succeeded to be promoted"

#: neomaril_codex.training.NeomarilTrainingExecution.promote_model:24 of
#, fuzzy
msgid "The new training model"
msgstr "Módulo de treinamento"

#: ../../source/training.rst:18
msgid "neomaril\\_codex.training.NeomarilTrainingExperiment"
msgstr "neomaril\\_codex.training.NeomarilTrainingExperiment"

#: neomaril_codex.training.NeomarilTrainingExperiment:1 of
msgid "Bases: :py:class:`~neomaril_codex.base.BaseNeomaril`"
msgstr "Bases: :py:class:`~neomaril_codex.base.BaseNeomaril`"

#: neomaril_codex.training.NeomarilTrainingExperiment:1 of
msgid "Class to manage models being trained inside Neomaril"
msgstr "Class to manage models being trained inside Neomaril"

#: neomaril_codex.training.NeomarilTrainingExperiment:15 of
#, fuzzy
msgid "training_id"
msgstr "training_id"

#: neomaril_codex.training.NeomarilTrainingExperiment:17 of
msgid "group"
msgstr "group"

#: neomaril_codex.training.NeomarilTrainingExperiment:19 of
msgid "environment"
msgstr "environment"

#: neomaril_codex.training.NeomarilTrainingExperiment:20 of
msgid ""
"Flag that choose which environment of Neomaril you are using. Test your "
"deployment first before changing to production. Default is True"
msgstr ""
"Flag that choose which environment of Neomaril you are using. Test your "
"deployment first before changing to production. Default is True"

#: neomaril_codex.training.NeomarilTrainingExperiment:23 of
msgid "executions"
msgstr "executions"

#: neomaril_codex.training.NeomarilTrainingExperiment:-1 of
msgid "List[int]"
msgstr "List[int]"

#: neomaril_codex.training.NeomarilTrainingExperiment:22 of
msgid "Ids for the executions in that training"
msgstr "Ids for the executions in that training"

#: neomaril_codex.training.NeomarilTrainingExperiment.get_all_training_executions:1
#: of
msgid "Get all executions from that experiment."
msgstr "Get all executions from that experiment."

#: neomaril_codex.training.NeomarilTrainingExperiment.get_all_training_executions:3
#: of
msgid "All executions from that training"
msgstr "All executions from that training"

#: neomaril_codex.training.NeomarilTrainingExperiment.get_training_execution:1
#: of
msgid "Get a execution instace."
msgstr "Get a execution instace."

#: neomaril_codex.training.NeomarilTrainingExperiment.get_training_execution:3
#: of
msgid "Execution id. If not informed we get the last execution."
msgstr "Execution id. If not informed we get the last execution."

#: neomaril_codex.training.NeomarilTrainingExperiment.get_training_execution:6
#: of
msgid "The choosen execution"
msgstr "The choosen execution"

#: neomaril_codex.training.NeomarilTrainingExperiment.run_training:1 of
msgid "Runs a prediction from the current model."
msgstr "Runs a prediction from the current model."

#: neomaril_codex.training.NeomarilTrainingExperiment.run_training:5 of
msgid "Path of the file with train data."
msgstr "Path of the file with train data."

#: neomaril_codex.training.NeomarilTrainingExperiment.run_training:7 of
msgid ""
"The name of the training function inside the source file. Just used when "
"training_type is Custom"
msgstr ""
"The name of the training function inside the source file. Just used when "
"training_type is Custom"

#: neomaril_codex.training.NeomarilTrainingExperiment.run_training:9 of
msgid "Can be Custom, AutoML or External"
msgstr "Can be Custom, AutoML or External"

#: neomaril_codex.training.NeomarilTrainingExperiment.run_training:11 of
msgid "Description of the experiment"
msgstr "Description of the experiment"

#: neomaril_codex.training.NeomarilTrainingExperiment.run_training:13 of
msgid ""
"Python version for the model environment. Avaliable versions are 3.7, "
"3.8, 3.9, 3.10. Defaults to '3.8'. Just used when training_type is Custom"
msgstr ""
"Python version for the model environment. Avaliable versions are 3.7, "
"3.8, 3.9, 3.10. Defaults to '3.8'. Just used when training_type is Custom"

#: neomaril_codex.training.NeomarilTrainingExperiment.run_training:15 of
msgid ""
"Path to a JSON file with a the AutoML configuration. A dict can be send "
"as well. Just used when training_type is AutoML"
msgstr ""
"Path to a JSON file with a the AutoML configuration. A dict can be send "
"as well. Just used when training_type is AutoML"

#: neomaril_codex.training.NeomarilTrainingExperiment.run_training:17 of
msgid ""
"Path of the source file. The file must have a training function that "
"accepts one parameter: model_path (absolute path of where the file is "
"located). Just used when training_type is Custom"
msgstr ""
"Path of the source file. The file must have a training function that "
"accepts one parameter: model_path (absolute path of where the file is "
"located). Just used when training_type is Custom"

#: neomaril_codex.training.NeomarilTrainingExperiment.run_training:19 of
msgid ""
"Path of the requirements file. The packages versions must be fixed eg: "
"pandas==1.0. Just used when training_type is Custom"
msgstr ""
"Path of the requirements file. The packages versions must be fixed eg: "
"pandas==1.0. Just used when training_type is Custom"

#: neomaril_codex.training.NeomarilTrainingExperiment.run_training:21 of
msgid ""
".env file to be used in your training enviroment. This will be encrypted "
"in the server."
msgstr ""
".env file to be used in your training enviroment. This will be encrypted "
"in the server."

#: neomaril_codex.training.NeomarilTrainingExperiment.run_training:23 of
msgid ""
"A optional list with additional files paths that should be uploaded. If "
"the scoring function refer to this file they will be on the same folder "
"as the source file. Just used when training_type is Custom"
msgstr ""
"A optional list with additional files paths that should be uploaded. If "
"the scoring function refer to this file they will be on the same folder "
"as the source file. Just used when training_type is Custom"

#: neomaril_codex.training.NeomarilTrainingExperiment.run_training:25 of
msgid ""
"Boolean that informs if a model training is completed (True) or not "
"(False). Default value is False"
msgstr ""
"Boolean that informs if a model training is completed (True) or not "
"(False). Default value is False"

#: neomaril_codex.training.NeomarilTrainingClient.create_training_experiment:10
#: neomaril_codex.training.NeomarilTrainingExperiment.run_training:28 of
msgid "Some input parameters its invalid"
msgstr "Some input parameters its invalid"

#: neomaril_codex.training.NeomarilTrainingExperiment.run_training:30 of
msgid ""
"The return of the scoring function in the source file for Sync models or "
"the execution class for Async models."
msgstr ""
"The return of the scoring function in the source file for Sync models or "
"the execution class for Async models."

#: ../../source/training.rst:26
msgid "neomaril\\_codex.training.NeomarilTrainingClient"
msgstr "neomaril\\_codex.training.NeomarilTrainingClient"

#: neomaril_codex.training.NeomarilTrainingClient:1 of
msgid "Bases: :py:class:`~neomaril_codex.base.BaseNeomarilClient`"
msgstr "Bases: :py:class:`~neomaril_codex.base.BaseNeomarilClient`"

#: neomaril_codex.training.NeomarilTrainingClient:1 of
msgid "Class for client for acessing Neomaril and manage models"
msgstr "Class for client for acessing Neomaril and manage models"

#: neomaril_codex.training.NeomarilTrainingClient:17 of
msgid ""
"URL to Neomaril Server. Default value is "
"https://neomaril.staging.datarisk.net, use it to test your deployment "
"first before changing to production. You can also use the env variable "
"NEOMARIL_URL to set this"
msgstr ""
"URL to Neomaril Server. Default value is "
"https://neomaril.staging.datarisk.net, use it to test your deployment "
"first before changing to production. You can also use the env variable "
"NEOMARIL_URL to set this"

#: neomaril_codex.training.NeomarilTrainingClient:22 of
msgid "Server unavailable"
msgstr "Server unavailable"

#: neomaril_codex.training.NeomarilTrainingClient.create_training_experiment:1
#: of
msgid "Create a new training experiment on Neomaril."
msgstr "Create a new training experiment on Neomaril."

#: neomaril_codex.training.NeomarilTrainingClient.create_training_experiment:3
#: of
msgid "The name of the experiment, in less than 32 characters"
msgstr "The name of the experiment, in less than 32 characters"

#: neomaril_codex.training.NeomarilTrainingClient.create_training_experiment:5
#: of
msgid "The name of the scoring function inside the source file."
msgstr "The name of the scoring function inside the source file."

#: neomaril_codex.training.NeomarilTrainingClient.create_training_experiment:7
#: of
msgid "Group the model is inserted. Default to 'datarisk' (public group)"
msgstr "Group the model is inserted. Default to 'datarisk' (public group)"

#: neomaril_codex.training.NeomarilTrainingClient.create_training_experiment:11
#: of
msgid "Unknow internal server error"
msgstr "Unknow internal server error"

#: neomaril_codex.training.NeomarilTrainingClient.create_training_experiment:13
#: neomaril_codex.training.NeomarilTrainingClient.get_training:11 of
msgid ""
"A NeomarilTrainingExperiment instance with the training hash from "
"`training_id`"
msgstr ""
"A NeomarilTrainingExperiment instance with the training hash from "
"`training_id`"

#: neomaril_codex.training.NeomarilTrainingClient.get_training:1 of
msgid "Acess a model using its id"
msgstr "Acess a model using its id"

#: neomaril_codex.training.NeomarilTrainingClient.get_training:3 of
msgid "Training id (hash) that needs to be acessed"
msgstr "Training id (hash) that needs to be acessed"

#: neomaril_codex.training.NeomarilTrainingClient.get_training:5 of
msgid "Group the model is inserted. Default is 'datarisk' (public group)"
msgstr "Group the model is inserted. Default is 'datarisk' (public group)"

#: neomaril_codex.training.NeomarilTrainingClient.get_training:8 of
msgid "Model unavailable"
msgstr "Model unavailable"

#: neomaril_codex.training.NeomarilTrainingClient.get_training:9 of
msgid "Unknown return from server"
msgstr "Unknown return from server"

